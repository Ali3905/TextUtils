[{"F:\\Programming\\React\\React Practice\\app\\ap\\src\\index.js":"1","F:\\Programming\\React\\React Practice\\app\\ap\\src\\reportWebVitals.js":"2","F:\\Programming\\React\\React Practice\\app\\ap\\src\\App.js":"3","F:\\Programming\\React\\React Practice\\app\\ap\\src\\components\\About.js":"4","F:\\Programming\\React\\React Practice\\app\\ap\\src\\components\\Nav.js":"5","F:\\Programming\\React\\React Practice\\app\\ap\\src\\components\\TextForm.js":"6","F:\\Programming\\React\\React Practice\\app\\ap\\src\\components\\Alert.js":"7"},{"size":535,"mtime":1666188970191,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1666188970410,"results":"10","hashOfConfig":"9"},{"size":3513,"mtime":1667223457956,"results":"11","hashOfConfig":"9"},{"size":4504,"mtime":1665759675390,"results":"12","hashOfConfig":"9"},{"size":2480,"mtime":1667223421126,"results":"13","hashOfConfig":"9"},{"size":2563,"mtime":1665814787330,"results":"14","hashOfConfig":"9"},{"size":277,"mtime":1665817539469,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"2fc7y2",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"F:\\Programming\\React\\React Practice\\app\\ap\\src\\index.js",[],["33","34"],"F:\\Programming\\React\\React Practice\\app\\ap\\src\\reportWebVitals.js",[],"F:\\Programming\\React\\React Practice\\app\\ap\\src\\App.js",[],"F:\\Programming\\React\\React Practice\\app\\ap\\src\\components\\About.js",[],["35","36"],"F:\\Programming\\React\\React Practice\\app\\ap\\src\\components\\Nav.js",["37","38"],"import React from 'react'\r\n// import {useState} from 'react'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Nav(props) {\r\n    // const [mode, setMode] = useState('light')\r\n// let Mode = mode\r\n// const darkMode = () => {\r\n//   if(mode === 'light'){\r\n//     setMode('dark')\r\n//   }else{\r\n//     setMode('light')\r\n//   }\r\n// }\r\nconst btn = {\r\n    height : '30px',\r\n    width : '30px',\r\n  }\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg bg-${props.Mode}`} style={{color: props.Mode==='dark'?'white':'black'}}>\r\n  <div className=\"container-fluid\" >\r\n    <a id=\"select\" className=\"navbar-brand\" href=\"#\" style={{color: props.Mode==='dark'?'white':'black'}}>TextUtils</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\" >\r\n        <li className=\"nav-item\" >\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\" style={{color: props.Mode==='dark'?'white':'black'}}>Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          {/* <Link className=\"nav-link\" to=\"/about\" style={{color: props.Mode==='dark'?'white':'black'}}>About</Link> */}\r\n        </li>\r\n      \r\n      </ul>\r\n      {/* <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <button type=\"button\" className=\"btn btn-primary mx-1\" onClick={props.primmode} style={btn}></button>\r\n      <button type=\"button\" className=\"btn btn-success mx-3\" onClick={props.succmode} style={btn}></button>\r\n      <button type=\"button\" className=\"btn btn-warning mx-1\" onClick={props.warnmode} style={btn}></button>\r\n      <div className=\"form-check form-switch\">\r\n        <label htmlFor=\"accept\" id=\"accept\">\r\n\r\n        <input className=\"form-check-input\" onClick={props.darkMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n        </label>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </nav>\r\n  )\r\n}\r\n","F:\\Programming\\React\\React Practice\\app\\ap\\src\\components\\TextForm.js",[],"F:\\Programming\\React\\React Practice\\app\\ap\\src\\components\\Alert.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"39","replacedBy":"43"},{"ruleId":"41","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":22,"column":5,"nodeType":"47","endLine":22,"endColumn":107},{"ruleId":"45","severity":1,"message":"46","line":29,"column":11,"nodeType":"47","endLine":29,"endColumn":124},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],["48"],["49"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]
{"version":3,"sources":["components/Nav.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","props","btn","height","width","className","Mode","style","color","id","href","type","onClick","primmode","succmode","warnmode","htmlFor","darkMode","role","TextForm","useState","text","setText","preview","document","getElementById","show1","hide1","display","rows","value","onChange","event","target","backgroundColor","newText","toUpperCase","toLocaleLowerCase","split","length","Alert","alert","msg","App","mode","setMode","setALert","showAlert","message","setTimeout","body","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"4MAIe,SAASA,EAAIC,GAU5B,IAAMC,EAAM,CACRC,OAAS,OACTC,MAAQ,QAEV,OACE,qBAAKC,UAAS,qCAAgCJ,EAAMK,MAAQC,MAAO,CAACC,MAAoB,SAAbP,EAAMK,KAAc,QAAQ,SAAS,SAClH,sBAAKD,UAAU,kBAAiB,UAC9B,mBAAGI,GAAG,SAASJ,UAAU,eAAeK,KAAK,IAAIH,MAAO,CAACC,MAAoB,SAAbP,EAAMK,KAAc,QAAQ,SAAS,uBACrG,wBAAQD,UAAU,iBAAiBM,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAAmB,SAC7M,sBAAMN,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BI,GAAG,yBAAwB,UACnE,qBAAIJ,UAAU,kCAAiC,UAC7C,oBAAIA,UAAU,WAAU,SACtB,mBAAGA,UAAU,kBAAkB,eAAa,OAAOK,KAAK,IAAIH,MAAO,CAACC,MAAoB,SAAbP,EAAMK,KAAc,QAAQ,SAAS,oBAElH,oBAAID,UAAU,gBAShB,wBAAQM,KAAK,SAASN,UAAU,uBAAuBO,QAASX,EAAMY,SAAUN,MAAOL,IACvF,wBAAQS,KAAK,SAASN,UAAU,uBAAuBO,QAASX,EAAMa,SAAUP,MAAOL,IACvF,wBAAQS,KAAK,SAASN,UAAU,uBAAuBO,QAASX,EAAMc,SAAUR,MAAOL,IACvF,sBAAKG,UAAU,yBAAwB,UACrC,uBAAOW,QAAQ,SAASP,GAAG,SAAQ,SAEnC,uBAAOJ,UAAU,mBAAmBO,QAASX,EAAMgB,SAAUN,KAAK,WAAWO,KAAK,SAAST,GAAG,6BAE9F,uBAAOJ,UAAU,mBAAmBW,QAAQ,yBAAwB,wCAM5E,CCnDe,SAASG,EAASlB,GAC7B,MAAsBmB,mBAAS,IAAG,mBAA7BC,EAAI,KAAEC,EAAO,KACZC,EAAUC,SAASC,eAAe,WAClCC,EAAQF,SAASC,eAAe,QAChCE,EAAQH,SAASC,eAAe,QA0BhCG,EAAU,CACZA,QAAU,OACVpB,MAAoB,SAAbP,EAAMK,KAAc,QAAQ,SAOzC,OACI,gCACE,sBAAKD,UAAU,OAAM,UACjB,oBAAIE,MAAO,CAACC,MAAoB,SAAbP,EAAMK,KAAc,QAAQ,SAAS,yCACxD,0BAAUD,UAAU,eAAeI,GAAG,8BAA8BoB,KAAK,IAAIC,MAAOT,EAAMU,SA9B7E,SAACC,GAClBV,EAAQU,EAAMC,OAAOH,MACzB,EA6BQvB,MAAO,CAACC,MAAoB,SAAbP,EAAMK,KAAc,QAAQ,QAAQ4B,gBAA8B,SAAbjC,EAAMK,KAAc,OAAO,cAE/F,wBAAQK,KAAK,SAASN,UAAU,kBAAkBO,QAzCpC,WAClB,IAAIuB,EAAUd,EAAKe,cACnBd,EAAQa,EACZ,EAsCiF,kCACzE,wBAAQxB,KAAK,SAASN,UAAU,uBAAuBO,QAtCzC,WAClB,IAAIuB,EAAUd,EAAKgB,oBACnBf,EAAQa,EACZ,EAmCsF,kCAC9E,wBAAQxB,KAAK,SAASN,UAAU,uBAAuBI,GAAK,OAAMG,QAhC7D,WACTW,EAAQhB,MAAMqB,QAAU,QACxBF,EAAMnB,MAAMqB,QAAU,OACtBD,EAAMpB,MAAMqB,QAAU,QAC1B,EA4BwF,0BAChF,wBAAQjB,KAAK,SAASN,UAAU,uBAAuBI,GAAK,OAAMG,QA5B7D,WACTW,EAAQhB,MAAMqB,QAAU,OACxBD,EAAMpB,MAAMqB,QAAU,OACtBF,EAAMnB,MAAMqB,QAAU,QAC1B,EAwByFrB,MAAQ,CAACqB,QAAQ,OAAQpB,MAAM,SAAS,0BACzH,wBAAQG,KAAK,SAASN,UAAU,uBAAuBO,QAxBtC,WAErBU,EADc,GAElB,EAqByF,wBACrF,sBAAKf,MAAO,CAACC,MAAoB,SAAbP,EAAMK,KAAc,QAAQ,SAAS,UACrD,8CACCe,EAAKiB,MAAM,KAAKC,OAAM,cAAalB,EAAKkB,OAAM,iBAEnD,sBAAK9B,GAAK,UAAUF,MAAQqB,EAAS,UACjC,yCACA,4BAAIP,SAIhB,CC7De,SAASmB,EAAMvC,GAE5B,OACEA,EAAMwC,OAAS,sBAAKpC,UAAU,yDAAyDa,KAAK,QAAO,UAC/F,iCAASjB,EAAMwC,MAAM9B,OAAc,KAAGV,EAAMwC,MAAMC,MAG1D,CCyGeC,MAnGf,WAEE,MAAwBvB,mBAAS,SAAQ,mBAAlCwB,EAAI,KAAEC,EAAO,KACpB,EAA0BzB,mBAAS,MAAK,mBAAjCqB,EAAK,KAAEK,EAAQ,KAkEhBC,EAAY,SAACC,EAASrC,GAC1BmC,EAAS,CACPJ,IAAMM,EACNrC,KAAOA,IAETsC,YAAW,WACTH,EAAS,KACX,GAAG,KACL,EAEA,OAAY,qCAEV,cAAC9C,EAAG,CAACM,KAAQsC,EAAM3B,SA7EJ,WACH,UAAT2B,GACDC,EAAQ,QACRrB,SAAS0B,KAAK3C,MAAM2B,gBAAkB,UACtCa,EAAU,6BAA6B,WACvCvB,SAAS2B,MAAQ,yBAED,SAATP,GACPC,EAAQ,SACRrB,SAAS0B,KAAK3C,MAAM2B,gBAAkB,QACtCa,EAAU,8BAA8B,WACxCvB,SAAS2B,MAAQ,qBAGjBN,EAAQ,QACRrB,SAAS0B,KAAK3C,MAAM2B,gBAAkB,UACtCa,EAAU,6BAA6B,WACvCvB,SAAS2B,MAAQ,wBAErB,EA0D2CtC,SAzD1B,WACH,UAAT+B,GACDC,EAAQ,WACRrB,SAAS0B,KAAK3C,MAAM2B,gBAAkB,UACtCa,EAAU,gCAAgC,YACzB,YAATH,GACRC,EAAQ,SACRrB,SAAS0B,KAAK3C,MAAM2B,gBAAkB,QACtCa,EAAU,iCAAiC,aAE3CF,EAAQ,WACRrB,SAAS0B,KAAK3C,MAAM2B,gBAAkB,UACtCa,EAAU,gCAAgC,WAE9C,EA2CiEjC,SA1ChD,WACH,UAAT8B,GACDC,EAAQ,WACRrB,SAAS0B,KAAK3C,MAAM2B,gBAAkB,gBACtCa,EAAU,gCAAgC,YACzB,YAATH,GACRC,EAAQ,SACRrB,SAAS0B,KAAK3C,MAAM2B,gBAAkB,QACtCa,EAAU,iCAAiC,aAE3CF,EAAQ,WACRrB,SAAS0B,KAAK3C,MAAM2B,gBAAkB,gBACtCa,EAAU,gCAAgC,WAE9C,EA4BuFhC,SA3BtE,WACH,UAAT6B,GACDC,EAAQ,WACRrB,SAAS0B,KAAK3C,MAAM2B,gBAAkB,iBACtCa,EAAU,6BAA6B,YACtB,YAATH,GACRC,EAAQ,SACRrB,SAAS0B,KAAK3C,MAAM2B,gBAAkB,QACtCa,EAAU,8BAA8B,aAExCF,EAAQ,WACRrB,SAAS0B,KAAK3C,MAAM2B,gBAAkB,iBACtCa,EAAU,gCAAgC,WAE9C,IAcE,cAACP,EAAK,CAACC,MAASA,IAChB,qBAAKpC,UAAU,YAAW,SAKlB,cAACc,EAAQ,CAAEb,KAAQsC,QAS/B,ECpGeQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACV,GAEJ,ECJaQ,IAASC,WAAWtC,SAASC,eAAe,SACpDsC,OACH,cAAC,IAAMC,WAAU,UACf,cAAC,EAAG,OAORZ,G","file":"static/js/main.6a06352c.chunk.js","sourcesContent":["import React from 'react'\r\n// import {useState} from 'react'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Nav(props) {\r\n    // const [mode, setMode] = useState('light')\r\n// let Mode = mode\r\n// const darkMode = () => {\r\n//   if(mode === 'light'){\r\n//     setMode('dark')\r\n//   }else{\r\n//     setMode('light')\r\n//   }\r\n// }\r\nconst btn = {\r\n    height : '30px',\r\n    width : '30px',\r\n  }\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg bg-${props.Mode}`} style={{color: props.Mode==='dark'?'white':'black'}}>\r\n  <div className=\"container-fluid\" >\r\n    <a id=\"select\" className=\"navbar-brand\" href=\"#\" style={{color: props.Mode==='dark'?'white':'black'}}>TextUtils</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\" >\r\n        <li className=\"nav-item\" >\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\" style={{color: props.Mode==='dark'?'white':'black'}}>Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          {/* <Link className=\"nav-link\" to=\"/about\" style={{color: props.Mode==='dark'?'white':'black'}}>About</Link> */}\r\n        </li>\r\n      \r\n      </ul>\r\n      {/* <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <button type=\"button\" className=\"btn btn-primary mx-1\" onClick={props.primmode} style={btn}></button>\r\n      <button type=\"button\" className=\"btn btn-success mx-3\" onClick={props.succmode} style={btn}></button>\r\n      <button type=\"button\" className=\"btn btn-warning mx-1\" onClick={props.warnmode} style={btn}></button>\r\n      <div className=\"form-check form-switch\">\r\n        <label htmlFor=\"accept\" id=\"accept\">\r\n\r\n        <input className=\"form-check-input\" onClick={props.darkMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n        </label>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </nav>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    let [text, setText] = useState('');\r\n    const preview = document.getElementById(\"preview\")\r\n    const show1 = document.getElementById(\"show\")\r\n    const hide1 = document.getElementById(\"hide\")\r\n    const handleupClick = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n    }\r\n    const handleloClick = () => {\r\n        let newText = text.toLocaleLowerCase();\r\n        setText(newText)\r\n    }\r\n    const handleChange = (event) => {\r\n        setText(event.target.value)\r\n    }\r\n    const show = () => {\r\n        preview.style.display = 'block'\r\n        show1.style.display = 'none'\r\n        hide1.style.display = 'inline'\r\n    }\r\n    const hide = () => {\r\n        preview.style.display = 'none'\r\n        hide1.style.display = 'none'\r\n        show1.style.display = 'inline'\r\n    }\r\n    const handleClearClick = () => {\r\n        let newText = ''\r\n        setText(newText)\r\n    }\r\n    const display = {\r\n        display : \"none\",\r\n        color: props.Mode==='dark'?'white':'black'\r\n    }\r\n    \r\n    \r\n    // if (Mode === 'daek') {\r\n        \r\n    // }\r\n  return (\r\n      <div>\r\n        <div className=\"mb-3\">\r\n            <h1 style={{color: props.Mode==='dark'?'white':'black'}}>Enter text below to Analyze</h1>\r\n            <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"8\" value={text} onChange = {handleChange}\r\n            style={{color: props.Mode==='dark'?'white':'black',backgroundColor: props.Mode==='dark'?'grey':'white'}}></textarea>\r\n        </div>\r\n            <button type=\"button\" className=\"btn btn-primary\" onClick={handleupClick}>Convert to upperCase</button>\r\n            <button type=\"button\" className=\"btn btn-primary mx-2\" onClick={handleloClick}>Convert to lowerCase</button>\r\n            <button type=\"button\" className=\"btn btn-primary mx-2\" id = \"show\"onClick={show}>Show Preview</button>\r\n            <button type=\"button\" className=\"btn btn-primary mx-2\" id = \"hide\"onClick={hide} style= {{display:'none', color:\"white\"}} >Hide Preview</button>\r\n            <button type=\"button\" className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear Text</button>\r\n        <div style={{color: props.Mode==='dark'?'white':'black'}}>\r\n            <h2>Text Summary</h2>\r\n            {text.split(\" \").length} Words and {text.length} Characters\r\n        </div>\r\n        <div id = \"preview\" style= {display } >\r\n            <h2>Preview</h2>\r\n            <p>{text}</p>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    \r\n  return (\r\n    props.alert && <div className=\"alert alert-success alert-{props.alert.type} fade show\" role=\"alert\">\r\n        <strong>{props.alert.type}</strong>: {props.alert.msg}\r\n    </div>\r\n  )\r\n}\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport Nav from './components/Nav'\nimport { useState } from 'react';\n// import About from './components/About'\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport React from \"react\";\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n//   // Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  \n  const [mode, setMode] = useState('light')\n  const [alert, setALert] = useState(null);\n  const darkMode = () => {\n    if(mode === 'light'){\n      setMode('dark')\n      document.body.style.backgroundColor = '#2b2a30'\n      showAlert(\"Dark Mode has been Enabled\",\"Success\")\n      document.title = \"TextUtils - Dark Mode\"\n      // let val = 'checked'\n    }else if(mode === 'dark'){\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"Dark Mode has been Disabled\",\"Success\")\n      document.title = \"TextUtils - Home\"\n    }\n    else{\n      setMode('dark')\n      document.body.style.backgroundColor = '#2b2a30'\n      showAlert(\"Dark Mode has been Enabled\",\"Success\")\n      document.title = \"TextUtils - Dark Mode\"\n    }\n  }\n  const primmode = () => {\n    if(mode === 'light'){\n      setMode('primary')\n      document.body.style.backgroundColor = '#2a3f7e'\n      showAlert(\"Primary Mode has been Enabled\",\"Success\")\n    }else if (mode === 'primary'){\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"Primary Mode has been Disabled\",\"Success\")\n    }else{\n      setMode('primary')\n      document.body.style.backgroundColor = '#2a3f7e'\n      showAlert(\"Primary Mode has been Enabled\",\"Success\")\n    }\n  }\n  const succmode = () => {\n    if(mode === 'light'){\n      setMode('success')\n      document.body.style.backgroundColor = 'rgb(25 68 50)'\n      showAlert(\"Success Mode has been Enabled\",\"Success\")\n    }else if (mode === 'success'){\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"Success Mode has been Disabled\",\"Success\")\n    }else{\n      setMode('success')\n      document.body.style.backgroundColor = 'rgb(25 68 50)'\n      showAlert(\"Success Mode has been Enabled\",\"Success\")\n    }\n  }\n  const warnmode = () => {\n    if(mode === 'light'){\n      setMode('warning')\n      document.body.style.backgroundColor = 'rgb(166 147 0)'\n      showAlert(\"Warn Mode has been Enabled\",\"Success\")\n    }else if (mode === 'warning'){\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"Warn Mode has been Disabled\",\"Success\")\n    }else{\n      setMode('warning')\n      document.body.style.backgroundColor = 'rgb(166 147 0)'\n      showAlert(\"Success Mode has been Enabled\",\"Success\")\n    }\n  }\n  const showAlert = (message, type) => {\n    setALert({\n      msg : message,\n      type : type,\n    }) \n    setTimeout(() => {\n      setALert(null)\n    }, 1900);\n  }\n\n  return (    <>\n    {/* <Router> */}\n    <Nav Mode = {mode} darkMode = {darkMode} primmode = {primmode} succmode = {succmode} warnmode = {warnmode}  />\n    <Alert alert = {alert}/>\n    <div className='container'>\n    {/* <Routes> */}\n          {/* <Route exact path='/about' element = {<About/>} /> */}\n          {/* <Route  */}\n          {/* exact path=\"/\" element = { */}\n            <TextForm  Mode = {mode}/>\n            {/* }   */}\n          {/* /> */}\n        {/* </Route> */}\n        {/* </Routes> */}\n    {/* <About/> */}\n    </div>\n     {/* </Router>  */}\n    </>)\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
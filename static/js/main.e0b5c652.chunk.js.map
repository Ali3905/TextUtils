{"version":3,"sources":["components/Nav.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","props","className","Mode","style","color","id","to","type","htmlFor","onClick","darkMode","role","TextForm","useState","text","setText","preview","document","getElementById","show1","hide1","display","rows","value","onChange","event","target","backgroundColor","newText","toUpperCase","toLocaleLowerCase","split","filter","ele","length","Alert","height","alert","msg","App","mode","setMode","setALert","showAlert","message","setTimeout","body","title","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"qNAIe,SAASA,EAAIC,GAM1B,OACE,qBAAKC,UAAS,qCAAgCD,EAAME,MAAQC,MAAO,CAACC,MAAoB,SAAbJ,EAAME,KAAc,QAAQ,SAAS,SAClH,sBAAKD,UAAU,kBAAiB,UAC9B,cAAC,IAAI,CAACI,GAAG,SAASJ,UAAU,eAAeK,GAAG,IAAIH,MAAO,CAACC,MAAoB,SAAbJ,EAAME,KAAc,QAAQ,SAAS,uBACtG,wBAAQD,UAAU,iBAAiBM,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAAmB,SAC7M,sBAAMN,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BI,GAAG,yBAAwB,UACnE,oBAAIJ,UAAU,kCAAiC,SAC7C,oBAAIA,UAAU,WAAU,SACtB,cAAC,IAAI,CAACA,UAAU,kBAAkB,eAAa,OAAOK,GAAG,IAAIH,MAAO,CAACC,MAAoB,SAAbJ,EAAME,KAAc,QAAQ,SAAS,sBAcrH,sBAAKD,UAAU,yBAAwB,UACrC,uBAAOO,QAAQ,SAASH,GAAG,SAAQ,SAEnC,uBAAOJ,UAAU,mBAAmBQ,QAAST,EAAMU,SAAUH,KAAK,WAAWI,KAAK,SAASN,GAAG,6BAE9F,uBAAOJ,UAAU,mBAAmBO,QAAQ,yBAAwB,wCAM5E,CC3Ce,SAASI,EAASZ,GAC7B,MAAsBa,mBAAS,IAAG,mBAA7BC,EAAI,KAAEC,EAAO,KACZC,EAAUC,SAASC,eAAe,WAClCC,EAAQF,SAASC,eAAe,QAChCE,EAAQH,SAASC,eAAe,QA0BhCG,EAAU,CACZA,QAAU,OACVjB,MAAoB,SAAbJ,EAAME,KAAc,QAAQ,SAOzC,OACI,gCACE,sBAAKD,UAAU,OAAM,UACjB,oBAAIE,MAAO,CAACC,MAAoB,SAAbJ,EAAME,KAAc,QAAQ,SAAS,yCACxD,0BAAUD,UAAU,eAAeI,GAAG,8BAA8BiB,KAAK,IAAIC,MAAOT,EAAMU,SA9B7E,SAACC,GAClBV,EAAQU,EAAMC,OAAOH,MACzB,EA6BQpB,MAAO,CAACC,MAAoB,SAAbJ,EAAME,KAAc,QAAQ,QAAQyB,gBAA8B,SAAb3B,EAAME,KAAc,UAAU,cAElG,wBAAQK,KAAK,SAASN,UAAU,4BAA4BQ,QAzC9C,WAClB,IAAImB,EAAUd,EAAKe,cACnBd,EAAQa,EACZ,EAsC2F,kCACnF,wBAAQrB,KAAK,SAASN,UAAU,4BAA4BQ,QAtC9C,WAClB,IAAImB,EAAUd,EAAKgB,oBACnBf,EAAQa,EACZ,EAmC2F,kCACnF,wBAAQrB,KAAK,SAASN,UAAU,4BAA4BI,GAAK,OAAMI,QAhClE,WACTO,EAAQb,MAAMkB,QAAU,QACxBF,EAAMhB,MAAMkB,QAAU,OACtBD,EAAMjB,MAAMkB,QAAU,QAC1B,EA4B6F,0BACrF,wBAAQd,KAAK,SAASN,UAAU,4BAA4BI,GAAK,OAAMI,QA5BlE,WACTO,EAAQb,MAAMkB,QAAU,OACxBD,EAAMjB,MAAMkB,QAAU,OACtBF,EAAMhB,MAAMkB,QAAU,QAC1B,EAwB8FlB,MAAQ,CAACkB,QAAQ,OAAQjB,MAAM,SAAS,0BAC9H,wBAAQG,KAAK,SAASN,UAAU,4BAA4BQ,QAxB3C,WAErBM,EADc,GAElB,EAqB8F,wBAC1F,sBAAKZ,MAAO,CAACC,MAAoB,SAAbJ,EAAME,KAAc,QAAQ,SAAS,UACrD,8CACCY,EAAKiB,MAAM,MAAMC,QAAO,SAACC,GAAO,OAAsB,IAAfA,EAAIC,MAAY,IAAGA,OAAM,cAAapB,EAAKoB,OAAM,iBAE7F,sBAAK7B,GAAK,UAAUF,MAAQkB,EAAS,UACjC,yCACA,4BAAIP,SAIhB,CC7De,SAASqB,EAAMnC,GAE5B,OACE,qBAAKG,MAAO,CAACiC,OAAO,QAAQ,SAC3BpC,EAAMqC,OAAS,sBAAKpC,UAAU,yDAAyDU,KAAK,QAAO,UAChG,iCAASX,EAAMqC,MAAM9B,OAAc,KAAGP,EAAMqC,MAAMC,QAI1D,C,WC+FeC,MA5Ff,WAEE,MAAwB1B,mBAAS,SAAQ,mBAAlC2B,EAAI,KAAEC,EAAO,KACpB,EAA0B5B,mBAAS,MAAK,mBAAjCwB,EAAK,KAAEK,EAAQ,KAkEhBC,EAAY,SAACC,EAASrC,GAC1BmC,EAAS,CACPJ,IAAMM,EACNrC,KAAOA,IAETsC,YAAW,WACTH,EAAS,KACX,GAAG,KACL,EAEA,OAAY,mCACV,eAAC,IAAM,WACP,cAAC3C,EAAG,CAACG,KAAQsC,EAAM9B,SA7EJ,WACH,UAAT8B,GACDC,EAAQ,QACRxB,SAAS6B,KAAK3C,MAAMwB,gBAAkB,UACtCgB,EAAU,6BAA6B,WACvC1B,SAAS8B,MAAQ,yBAED,SAATP,GACPC,EAAQ,SACRxB,SAAS6B,KAAK3C,MAAMwB,gBAAkB,QACtCgB,EAAU,8BAA8B,WACxC1B,SAAS8B,MAAQ,qBAGjBN,EAAQ,QACRxB,SAAS6B,KAAK3C,MAAMwB,gBAAkB,UACtCgB,EAAU,6BAA6B,WACvC1B,SAAS8B,MAAQ,wBAErB,IA2DE,cAACZ,EAAK,CAACE,MAASA,IAChB,qBAAKpC,UAAU,YAAW,SAC1B,cAAC,IAAM,UACD,cAAC,IAAK,CAAC+C,OAAK,EAACC,KAAK,IAAIC,QAAW,cAACtC,EAAQ,CAAEV,KAAQsC,cAK9D,EC5FeW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACV,GAEJ,ECJaQ,IAASC,WAAW5C,SAASC,eAAe,SACpD4C,OACH,cAAC,IAAMC,WAAU,UACf,cAAC,EAAG,OAORZ,G","file":"static/js/main.e0b5c652.chunk.js","sourcesContent":["import React from 'react'\r\n// import {useState} from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Nav(props) {\r\n\r\n// const btn = {\r\n//     height : '30px',\r\n//     width : '30px',\r\n//   }\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg bg-${props.Mode}`} style={{color: props.Mode==='dark'?'white':'black'}}>\r\n  <div className=\"container-fluid\" >\r\n    <Link id=\"select\" className=\"navbar-brand\" to=\"/\" style={{color: props.Mode==='dark'?'white':'black'}}>TextUtils</Link>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\" >\r\n        <li className=\"nav-item\" >\r\n          <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\" style={{color: props.Mode==='dark'?'white':'black'}}>Home</Link>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\" style={{color: props.Mode==='dark'?'white':'black'}}>About</Link>\r\n        </li> */}\r\n      \r\n      </ul>\r\n      {/* <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      {/* <button type=\"button\" className=\"btn btn-primary mx-1\" onClick={props.primmode} style={btn}></button>\r\n      <button type=\"button\" className=\"btn btn-success mx-3\" onClick={props.succmode} style={btn}></button>\r\n      <button type=\"button\" className=\"btn btn-warning mx-1\" onClick={props.warnmode} style={btn}></button> */}\r\n      <div className=\"form-check form-switch\">\r\n        <label htmlFor=\"accept\" id=\"accept\">\r\n\r\n        <input className=\"form-check-input\" onClick={props.darkMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n        </label>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </nav>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    let [text, setText] = useState('');\r\n    const preview = document.getElementById(\"preview\")\r\n    const show1 = document.getElementById(\"show\")\r\n    const hide1 = document.getElementById(\"hide\")\r\n    const handleupClick = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n    }\r\n    const handleloClick = () => {\r\n        let newText = text.toLocaleLowerCase();\r\n        setText(newText)\r\n    }\r\n    const handleChange = (event) => {\r\n        setText(event.target.value)\r\n    }\r\n    const show = () => {\r\n        preview.style.display = 'block'\r\n        show1.style.display = 'none'\r\n        hide1.style.display = 'inline'\r\n    }\r\n    const hide = () => {\r\n        preview.style.display = 'none'\r\n        hide1.style.display = 'none'\r\n        show1.style.display = 'inline'\r\n    }\r\n    const handleClearClick = () => {\r\n        let newText = ''\r\n        setText(newText)\r\n    }\r\n    const display = {\r\n        display : \"none\",\r\n        color: props.Mode==='dark'?'white':'black'\r\n    }\r\n    \r\n    \r\n    // if (Mode === 'daek') {\r\n        \r\n    // }\r\n  return (\r\n      <div>\r\n        <div className=\"mb-3\">\r\n            <h1 style={{color: props.Mode==='dark'?'white':'black'}}>Enter text below to Analyze</h1>\r\n            <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"8\" value={text} onChange = {handleChange}\r\n            style={{color: props.Mode==='dark'?'white':'black',backgroundColor: props.Mode==='dark'?'#272727':'white'}}></textarea>\r\n        </div>\r\n            <button type=\"button\" className=\"btn btn-primary mx-1 my-1\" onClick={handleupClick}>Convert to upperCase</button>\r\n            <button type=\"button\" className=\"btn btn-primary mx-1 my-1\" onClick={handleloClick}>Convert to lowerCase</button>\r\n            <button type=\"button\" className=\"btn btn-primary mx-1 my-1\" id = \"show\"onClick={show}>Show Preview</button>\r\n            <button type=\"button\" className=\"btn btn-primary mx-1 my-1\" id = \"hide\"onClick={hide} style= {{display:'none', color:\"white\"}} >Hide Preview</button>\r\n            <button type=\"button\" className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear Text</button>\r\n        <div style={{color: props.Mode==='dark'?'white':'black'}}>\r\n            <h2>Text Summary</h2>\r\n            {text.split(/\\s/).filter((ele)=>{return ele.length !== 0}).length} Words and {text.length} Characters\r\n        </div>\r\n        <div id = \"preview\" style= {display } >\r\n            <h2>Preview</h2>\r\n            <p>{text}</p>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    \r\n  return (\r\n    <div style={{height:'70px'}}>\r\n    {props.alert && <div className=\"alert alert-success alert-{props.alert.type} fade show\" role=\"alert\">\r\n        <strong>{props.alert.type}</strong>: {props.alert.msg}\r\n    </div>}\r\n    </div>\r\n  )\r\n}\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport Nav from './components/Nav'\nimport { useState } from 'react';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  // Link\n} from \"react-router-dom\";\n\nfunction App() {\n  \n  const [mode, setMode] = useState('light')\n  const [alert, setALert] = useState(null);\n  const darkMode = () => {\n    if(mode === 'light'){\n      setMode('dark')\n      document.body.style.backgroundColor = '#2b2a30'\n      showAlert(\"Dark Mode has been Enabled\",\"Success\")\n      document.title = \"TextUtils - Dark Mode\"\n      // let val = 'checked'\n    }else if(mode === 'dark'){\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"Dark Mode has been Disabled\",\"Success\")\n      document.title = \"TextUtils - Home\"\n    }\n    else{\n      setMode('dark')\n      document.body.style.backgroundColor = '#2b2a30'\n      showAlert(\"Dark Mode has been Enabled\",\"Success\")\n      document.title = \"TextUtils - Dark Mode\"\n    }\n  }\n  // const primmode = () => {\n  //   if(mode === 'light'){\n  //     setMode('primary')\n  //     document.body.style.backgroundColor = '#2a3f7e'\n  //     showAlert(\"Primary Mode has been Enabled\",\"Success\")\n  //   }else if (mode === 'primary'){\n  //     setMode('light')\n  //     document.body.style.backgroundColor = 'white'\n  //     showAlert(\"Primary Mode has been Disabled\",\"Success\")\n  //   }else{\n  //     setMode('primary')\n  //     document.body.style.backgroundColor = '#2a3f7e'\n  //     showAlert(\"Primary Mode has been Enabled\",\"Success\")\n  //   }\n  // }\n  // const succmode = () => {\n  //   if(mode === 'light'){\n  //     setMode('success')\n  //     document.body.style.backgroundColor = 'rgb(25 68 50)'\n  //     showAlert(\"Success Mode has been Enabled\",\"Success\")\n  //   }else if (mode === 'success'){\n  //     setMode('light')\n  //     document.body.style.backgroundColor = 'white'\n  //     showAlert(\"Success Mode has been Disabled\",\"Success\")\n  //   }else{\n  //     setMode('success')\n  //     document.body.style.backgroundColor = 'rgb(25 68 50)'\n  //     showAlert(\"Success Mode has been Enabled\",\"Success\")\n  //   }\n  // }\n  // const warnmode = () => {\n  //   if(mode === 'light'){\n  //     setMode('warning')\n  //     document.body.style.backgroundColor = 'rgb(166 147 0)'\n  //     showAlert(\"Warn Mode has been Enabled\",\"Success\")\n  //   }else if (mode === 'warning'){\n  //     setMode('light')\n  //     document.body.style.backgroundColor = 'white'\n  //     showAlert(\"Warn Mode has been Disabled\",\"Success\")\n  //   }else{\n  //     setMode('warning')\n  //     document.body.style.backgroundColor = 'rgb(166 147 0)'\n  //     showAlert(\"Success Mode has been Enabled\",\"Success\")\n  //   }\n  // }\n  const showAlert = (message, type) => {\n    setALert({\n      msg : message,\n      type : type,\n    }) \n    setTimeout(() => {\n      setALert(null)\n    }, 1900);\n  }\n\n  return (    <>\n    <Router >\n    <Nav Mode = {mode} darkMode = {darkMode} />\n    <Alert alert = {alert}/>\n    <div className='container'>\n    <Routes>\n          <Route exact path=\"/\" element = {<TextForm  Mode = {mode}/> }/>\n        </Routes>\n    </div>\n     </Router> \n    </>)\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}